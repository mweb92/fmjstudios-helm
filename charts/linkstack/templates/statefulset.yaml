apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "linkstack.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "linkstack.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "linkstack.selectorLabels" . | nindent 6 }}
  {{- if .Values.strategy -}}
  updateStrategy:
  {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "linkstack.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels -}}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "linkstack.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automount }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "linkstack.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "linkstack.fullname" . }}
          {{/* Container settings */}}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: {{ include "linkstack.pv.name" . }}
              mountPath: {{ .Values.linkstack.data.rootPath }}
          {{- if .Values.volumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      volumes:
        - name: {{ include "linkstack.pv.name" . }}
          persistentVolumeClaim:
            claimName: {{ default (include "linkstack.pvc.name" .) .Values.linkstack.data.pvc.existingClaim }}
      {{- if .Values.volumes}}
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      initContainers:
        - name: linkstack-init
          image: {{ include "linkstack.image" . }}
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          #args: ["-c", "cp -r /htdocs/ /data/ && chown -R {{ default "100" .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }} /data"]
          args: ["-c", "apk add --no-interactive rsync && rsync --chmod=777 --ignore-existing -r /htdocs/ /data && chown -R {{ default "100" .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }} /data"]
          volumeMounts:
            - name: {{ include "linkstack.pv.name" . }}
              mountPath: "/data"
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: {{ .Values.linkstack.data.pvc.reclaimPolicy }}
    whenScaled: {{ .Values.linkstack.data.pvc.reclaimPolicy }}
